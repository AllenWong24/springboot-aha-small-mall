<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aha.smallmall.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.aha.smallmall.pojo.Users">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_sex" jdbcType="VARCHAR" property="userSex" />
    <result column="user_birthday" jdbcType="TIMESTAMP" property="userBirthday" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="is_active" jdbcType="BIT" property="isActive" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_unionid" jdbcType="VARCHAR" property="userUnionid" />
    <result column="user_balance" jdbcType="REAL" property="userBalance" />
    <result column="user_openid" jdbcType="VARCHAR" property="userOpenid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, create_time, update_time, is_deleted, user_email, user_password, user_nickname, 
    user_address, user_sex, user_birthday, user_name, is_active, user_phone, user_avatar, 
    user_unionid, user_balance, user_openid
  </sql>
  <select id="selectByExample" parameterType="com.aha.smallmall.pojo.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aha.smallmall.pojo.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aha.smallmall.pojo.Users">
    insert into users (user_id, create_time, update_time, 
      is_deleted, user_email, user_password, 
      user_nickname, user_address, user_sex, 
      user_birthday, user_name, is_active, 
      user_phone, user_avatar, user_unionid, 
      user_balance, user_openid)
    values (#{userId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{userEmail,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, 
      #{userBirthday,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, #{isActive,jdbcType=BIT}, 
      #{userPhone,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}, #{userUnionid,jdbcType=VARCHAR}, 
      #{userBalance,jdbcType=REAL}, #{userOpenid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aha.smallmall.pojo.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userUnionid != null">
        user_unionid,
      </if>
      <if test="userBalance != null">
        user_balance,
      </if>
      <if test="userOpenid != null">
        user_openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=BIT},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userUnionid != null">
        #{userUnionid,jdbcType=VARCHAR},
      </if>
      <if test="userBalance != null">
        #{userBalance,jdbcType=REAL},
      </if>
      <if test="userOpenid != null">
        #{userOpenid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aha.smallmall.pojo.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirthday != null">
        user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=BIT},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userUnionid != null">
        user_unionid = #{record.userUnionid,jdbcType=VARCHAR},
      </if>
      <if test="record.userBalance != null">
        user_balance = #{record.userBalance,jdbcType=REAL},
      </if>
      <if test="record.userOpenid != null">
        user_openid = #{record.userOpenid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set user_id = #{record.userId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=VARCHAR},
      user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR},
      is_active = #{record.isActive,jdbcType=BIT},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_unionid = #{record.userUnionid,jdbcType=VARCHAR},
      user_balance = #{record.userBalance,jdbcType=REAL},
      user_openid = #{record.userOpenid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aha.smallmall.pojo.Users">
    update users
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userUnionid != null">
        user_unionid = #{userUnionid,jdbcType=VARCHAR},
      </if>
      <if test="userBalance != null">
        user_balance = #{userBalance,jdbcType=REAL},
      </if>
      <if test="userOpenid != null">
        user_openid = #{userOpenid,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aha.smallmall.pojo.Users">
    update users
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=BIT},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_unionid = #{userUnionid,jdbcType=VARCHAR},
      user_balance = #{userBalance,jdbcType=REAL},
      user_openid = #{userOpenid,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>